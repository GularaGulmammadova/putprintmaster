"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "createVersion", {
    enumerable: true,
    get: function() {
        return createVersion;
    }
});
const _sanitizeInternalFields = /*#__PURE__*/ _interop_require_default(require("./utilities/sanitizeInternalFields"));
const _withSession = require("./withSession");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const createVersion = async function createVersion({ autosave, collectionSlug, createdAt, parent, req = {}, updatedAt, versionData }) {
    const VersionModel = this.versions[collectionSlug];
    const options = await (0, _withSession.withSession)(this, req);
    const [doc] = await VersionModel.create([
        {
            autosave,
            createdAt,
            latest: true,
            parent,
            updatedAt,
            version: versionData
        }
    ], options, req);
    await VersionModel.updateMany({
        $and: [
            {
                _id: {
                    $ne: doc._id
                }
            },
            {
                parent: {
                    $eq: parent
                }
            },
            {
                latest: {
                    $eq: true
                }
            }
        ]
    }, {
        $unset: {
            latest: 1
        }
    }, options);
    const result = this.jsonParse ? JSON.parse(JSON.stringify(doc)) : doc.toObject();
    const verificationToken = doc._verificationToken;
    if (verificationToken) {
        result._verificationToken = verificationToken;
    }
    return (0, _sanitizeInternalFields.default)(result);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jcmVhdGVWZXJzaW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgQ3JlYXRlVmVyc2lvbiB9IGZyb20gJ3BheWxvYWQvZGF0YWJhc2UnXG5pbXBvcnQgdHlwZSB7IFBheWxvYWRSZXF1ZXN0IH0gZnJvbSAncGF5bG9hZC90eXBlcydcblxuaW1wb3J0IHR5cGUgeyBNb25nb29zZUFkYXB0ZXIgfSBmcm9tICcuJ1xuXG5pbXBvcnQgc2FuaXRpemVJbnRlcm5hbEZpZWxkcyBmcm9tICcuL3V0aWxpdGllcy9zYW5pdGl6ZUludGVybmFsRmllbGRzJ1xuaW1wb3J0IHsgd2l0aFNlc3Npb24gfSBmcm9tICcuL3dpdGhTZXNzaW9uJ1xuXG5leHBvcnQgY29uc3QgY3JlYXRlVmVyc2lvbjogQ3JlYXRlVmVyc2lvbiA9IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVZlcnNpb24oXG4gIHRoaXM6IE1vbmdvb3NlQWRhcHRlcixcbiAge1xuICAgIGF1dG9zYXZlLFxuICAgIGNvbGxlY3Rpb25TbHVnLFxuICAgIGNyZWF0ZWRBdCxcbiAgICBwYXJlbnQsXG4gICAgcmVxID0ge30gYXMgUGF5bG9hZFJlcXVlc3QsXG4gICAgdXBkYXRlZEF0LFxuICAgIHZlcnNpb25EYXRhLFxuICB9LFxuKSB7XG4gIGNvbnN0IFZlcnNpb25Nb2RlbCA9IHRoaXMudmVyc2lvbnNbY29sbGVjdGlvblNsdWddXG4gIGNvbnN0IG9wdGlvbnMgPSBhd2FpdCB3aXRoU2Vzc2lvbih0aGlzLCByZXEpXG5cbiAgY29uc3QgW2RvY10gPSBhd2FpdCBWZXJzaW9uTW9kZWwuY3JlYXRlKFxuICAgIFtcbiAgICAgIHtcbiAgICAgICAgYXV0b3NhdmUsXG4gICAgICAgIGNyZWF0ZWRBdCxcbiAgICAgICAgbGF0ZXN0OiB0cnVlLFxuICAgICAgICBwYXJlbnQsXG4gICAgICAgIHVwZGF0ZWRBdCxcbiAgICAgICAgdmVyc2lvbjogdmVyc2lvbkRhdGEsXG4gICAgICB9LFxuICAgIF0sXG4gICAgb3B0aW9ucyxcbiAgICByZXEsXG4gIClcblxuICBhd2FpdCBWZXJzaW9uTW9kZWwudXBkYXRlTWFueShcbiAgICB7XG4gICAgICAkYW5kOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBfaWQ6IHtcbiAgICAgICAgICAgICRuZTogZG9jLl9pZCxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGFyZW50OiB7XG4gICAgICAgICAgICAkZXE6IHBhcmVudCxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgbGF0ZXN0OiB7XG4gICAgICAgICAgICAkZXE6IHRydWUsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSxcbiAgICB7ICR1bnNldDogeyBsYXRlc3Q6IDEgfSB9LFxuICAgIG9wdGlvbnMsXG4gIClcblxuICBjb25zdCByZXN1bHQgPSB0aGlzLmpzb25QYXJzZSA/IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZG9jKSkgOiBkb2MudG9PYmplY3QoKVxuXG4gIGNvbnN0IHZlcmlmaWNhdGlvblRva2VuID0gZG9jLl92ZXJpZmljYXRpb25Ub2tlblxuXG4gIGlmICh2ZXJpZmljYXRpb25Ub2tlbikge1xuICAgIHJlc3VsdC5fdmVyaWZpY2F0aW9uVG9rZW4gPSB2ZXJpZmljYXRpb25Ub2tlblxuICB9XG5cbiAgcmV0dXJuIHNhbml0aXplSW50ZXJuYWxGaWVsZHMocmVzdWx0KVxufVxuIl0sIm5hbWVzIjpbImNyZWF0ZVZlcnNpb24iLCJhdXRvc2F2ZSIsImNvbGxlY3Rpb25TbHVnIiwiY3JlYXRlZEF0IiwicGFyZW50IiwicmVxIiwidXBkYXRlZEF0IiwidmVyc2lvbkRhdGEiLCJWZXJzaW9uTW9kZWwiLCJ2ZXJzaW9ucyIsIm9wdGlvbnMiLCJ3aXRoU2Vzc2lvbiIsImRvYyIsImNyZWF0ZSIsImxhdGVzdCIsInZlcnNpb24iLCJ1cGRhdGVNYW55IiwiJGFuZCIsIl9pZCIsIiRuZSIsIiRlcSIsIiR1bnNldCIsInJlc3VsdCIsImpzb25QYXJzZSIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSIsInRvT2JqZWN0IiwidmVyaWZpY2F0aW9uVG9rZW4iLCJfdmVyaWZpY2F0aW9uVG9rZW4iLCJzYW5pdGl6ZUludGVybmFsRmllbGRzIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiOzs7OytCQVFhQTs7O2VBQUFBOzs7K0VBSHNCOzZCQUNQOzs7Ozs7QUFFckIsTUFBTUEsZ0JBQStCLGVBQWVBLGNBRXpELEVBQ0VDLFFBQVEsRUFDUkMsY0FBYyxFQUNkQyxTQUFTLEVBQ1RDLE1BQU0sRUFDTkMsTUFBTSxDQUFDLENBQW1CLEVBQzFCQyxTQUFTLEVBQ1RDLFdBQVcsRUFDWjtJQUVELE1BQU1DLGVBQWUsSUFBSSxDQUFDQyxRQUFRLENBQUNQLGVBQWU7SUFDbEQsTUFBTVEsVUFBVSxNQUFNQyxJQUFBQSx3QkFBVyxFQUFDLElBQUksRUFBRU47SUFFeEMsTUFBTSxDQUFDTyxJQUFJLEdBQUcsTUFBTUosYUFBYUssTUFBTSxDQUNyQztRQUNFO1lBQ0VaO1lBQ0FFO1lBQ0FXLFFBQVE7WUFDUlY7WUFDQUU7WUFDQVMsU0FBU1I7UUFDWDtLQUNELEVBQ0RHLFNBQ0FMO0lBR0YsTUFBTUcsYUFBYVEsVUFBVSxDQUMzQjtRQUNFQyxNQUFNO1lBQ0o7Z0JBQ0VDLEtBQUs7b0JBQ0hDLEtBQUtQLElBQUlNLEdBQUc7Z0JBQ2Q7WUFDRjtZQUNBO2dCQUNFZCxRQUFRO29CQUNOZ0IsS0FBS2hCO2dCQUNQO1lBQ0Y7WUFDQTtnQkFDRVUsUUFBUTtvQkFDTk0sS0FBSztnQkFDUDtZQUNGO1NBQ0Q7SUFDSCxHQUNBO1FBQUVDLFFBQVE7WUFBRVAsUUFBUTtRQUFFO0lBQUUsR0FDeEJKO0lBR0YsTUFBTVksU0FBUyxJQUFJLENBQUNDLFNBQVMsR0FBR0MsS0FBS0MsS0FBSyxDQUFDRCxLQUFLRSxTQUFTLENBQUNkLFFBQVFBLElBQUllLFFBQVE7SUFFOUUsTUFBTUMsb0JBQW9CaEIsSUFBSWlCLGtCQUFrQjtJQUVoRCxJQUFJRCxtQkFBbUI7UUFDckJOLE9BQU9PLGtCQUFrQixHQUFHRDtJQUM5QjtJQUVBLE9BQU9FLElBQUFBLCtCQUFzQixFQUFDUjtBQUNoQyJ9