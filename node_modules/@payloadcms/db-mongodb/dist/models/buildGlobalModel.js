"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "buildGlobalModel", {
    enumerable: true,
    get: function() {
        return buildGlobalModel;
    }
});
const _mongoose = /*#__PURE__*/ _interop_require_default(require("mongoose"));
const _buildQuery = /*#__PURE__*/ _interop_require_default(require("../queries/buildQuery"));
const _buildSchema = /*#__PURE__*/ _interop_require_default(require("./buildSchema"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const buildGlobalModel = (adapter)=>{
    if (adapter.payload.config.globals && adapter.payload.config.globals.length > 0) {
        const globalsSchema = new _mongoose.default.Schema({}, {
            discriminatorKey: 'globalType',
            minimize: false,
            ...adapter.schemaOptions,
            ...adapter.globalsOptions.schemaOptions || {},
            timestamps: true
        });
        globalsSchema.plugin((0, _buildQuery.default)());
        const Globals = _mongoose.default.model('globals', globalsSchema, 'globals');
        Object.values(adapter.payload.config.globals).forEach((globalConfig)=>{
            const globalSchema = (0, _buildSchema.default)(adapter, globalConfig.fields, {
                options: {
                    minimize: false,
                    ...adapter.schemaOptions,
                    ...adapter.globalsOptions.schemaOptions || {}
                }
            });
            Globals.discriminator(globalConfig.slug, globalSchema);
        });
        return Globals;
    }
    return null;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvYnVpbGRHbG9iYWxNb2RlbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnXG5cbmltcG9ydCB0eXBlIHsgTW9uZ29vc2VBZGFwdGVyIH0gZnJvbSAnLi4nXG5pbXBvcnQgdHlwZSB7IEdsb2JhbE1vZGVsIH0gZnJvbSAnLi4vdHlwZXMnXG5cbmltcG9ydCBnZXRCdWlsZFF1ZXJ5UGx1Z2luIGZyb20gJy4uL3F1ZXJpZXMvYnVpbGRRdWVyeSdcbmltcG9ydCBidWlsZFNjaGVtYSBmcm9tICcuL2J1aWxkU2NoZW1hJ1xuXG5leHBvcnQgY29uc3QgYnVpbGRHbG9iYWxNb2RlbCA9IChhZGFwdGVyOiBNb25nb29zZUFkYXB0ZXIpOiBHbG9iYWxNb2RlbCB8IG51bGwgPT4ge1xuICBpZiAoYWRhcHRlci5wYXlsb2FkLmNvbmZpZy5nbG9iYWxzICYmIGFkYXB0ZXIucGF5bG9hZC5jb25maWcuZ2xvYmFscy5sZW5ndGggPiAwKSB7XG4gICAgY29uc3QgZ2xvYmFsc1NjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoXG4gICAgICB7fSxcbiAgICAgIHtcbiAgICAgICAgZGlzY3JpbWluYXRvcktleTogJ2dsb2JhbFR5cGUnLFxuICAgICAgICBtaW5pbWl6ZTogZmFsc2UsXG4gICAgICAgIC4uLmFkYXB0ZXIuc2NoZW1hT3B0aW9ucyxcbiAgICAgICAgLi4uKGFkYXB0ZXIuZ2xvYmFsc09wdGlvbnMuc2NoZW1hT3B0aW9ucyB8fCB7fSksXG4gICAgICAgIHRpbWVzdGFtcHM6IHRydWUsXG4gICAgICB9LFxuICAgIClcblxuICAgIGdsb2JhbHNTY2hlbWEucGx1Z2luKGdldEJ1aWxkUXVlcnlQbHVnaW4oKSlcblxuICAgIGNvbnN0IEdsb2JhbHMgPSBtb25nb29zZS5tb2RlbCgnZ2xvYmFscycsIGdsb2JhbHNTY2hlbWEsICdnbG9iYWxzJykgYXMgdW5rbm93biBhcyBHbG9iYWxNb2RlbFxuXG4gICAgT2JqZWN0LnZhbHVlcyhhZGFwdGVyLnBheWxvYWQuY29uZmlnLmdsb2JhbHMpLmZvckVhY2goKGdsb2JhbENvbmZpZykgPT4ge1xuICAgICAgY29uc3QgZ2xvYmFsU2NoZW1hID0gYnVpbGRTY2hlbWEoYWRhcHRlciwgZ2xvYmFsQ29uZmlnLmZpZWxkcywge1xuICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgbWluaW1pemU6IGZhbHNlLFxuICAgICAgICAgIC4uLmFkYXB0ZXIuc2NoZW1hT3B0aW9ucyxcbiAgICAgICAgICAuLi4oYWRhcHRlci5nbG9iYWxzT3B0aW9ucy5zY2hlbWFPcHRpb25zIHx8IHt9KSxcbiAgICAgICAgfSxcbiAgICAgIH0pXG4gICAgICBHbG9iYWxzLmRpc2NyaW1pbmF0b3IoZ2xvYmFsQ29uZmlnLnNsdWcsIGdsb2JhbFNjaGVtYSlcbiAgICB9KVxuXG4gICAgcmV0dXJuIEdsb2JhbHNcbiAgfVxuXG4gIHJldHVybiBudWxsXG59XG4iXSwibmFtZXMiOlsiYnVpbGRHbG9iYWxNb2RlbCIsImFkYXB0ZXIiLCJwYXlsb2FkIiwiY29uZmlnIiwiZ2xvYmFscyIsImxlbmd0aCIsImdsb2JhbHNTY2hlbWEiLCJtb25nb29zZSIsIlNjaGVtYSIsImRpc2NyaW1pbmF0b3JLZXkiLCJtaW5pbWl6ZSIsInNjaGVtYU9wdGlvbnMiLCJnbG9iYWxzT3B0aW9ucyIsInRpbWVzdGFtcHMiLCJwbHVnaW4iLCJnZXRCdWlsZFF1ZXJ5UGx1Z2luIiwiR2xvYmFscyIsIm1vZGVsIiwiT2JqZWN0IiwidmFsdWVzIiwiZm9yRWFjaCIsImdsb2JhbENvbmZpZyIsImdsb2JhbFNjaGVtYSIsImJ1aWxkU2NoZW1hIiwiZmllbGRzIiwib3B0aW9ucyIsImRpc2NyaW1pbmF0b3IiLCJzbHVnIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFRYUE7OztlQUFBQTs7O2lFQVJRO21FQUtXO29FQUNSOzs7Ozs7QUFFakIsTUFBTUEsbUJBQW1CLENBQUNDO0lBQy9CLElBQUlBLFFBQVFDLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDQyxPQUFPLElBQUlILFFBQVFDLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDQyxPQUFPLENBQUNDLE1BQU0sR0FBRyxHQUFHO1FBQy9FLE1BQU1DLGdCQUFnQixJQUFJQyxpQkFBUSxDQUFDQyxNQUFNLENBQ3ZDLENBQUMsR0FDRDtZQUNFQyxrQkFBa0I7WUFDbEJDLFVBQVU7WUFDVixHQUFHVCxRQUFRVSxhQUFhO1lBQ3hCLEdBQUlWLFFBQVFXLGNBQWMsQ0FBQ0QsYUFBYSxJQUFJLENBQUMsQ0FBQztZQUM5Q0UsWUFBWTtRQUNkO1FBR0ZQLGNBQWNRLE1BQU0sQ0FBQ0MsSUFBQUEsbUJBQW1CO1FBRXhDLE1BQU1DLFVBQVVULGlCQUFRLENBQUNVLEtBQUssQ0FBQyxXQUFXWCxlQUFlO1FBRXpEWSxPQUFPQyxNQUFNLENBQUNsQixRQUFRQyxPQUFPLENBQUNDLE1BQU0sQ0FBQ0MsT0FBTyxFQUFFZ0IsT0FBTyxDQUFDLENBQUNDO1lBQ3JELE1BQU1DLGVBQWVDLElBQUFBLG9CQUFXLEVBQUN0QixTQUFTb0IsYUFBYUcsTUFBTSxFQUFFO2dCQUM3REMsU0FBUztvQkFDUGYsVUFBVTtvQkFDVixHQUFHVCxRQUFRVSxhQUFhO29CQUN4QixHQUFJVixRQUFRVyxjQUFjLENBQUNELGFBQWEsSUFBSSxDQUFDLENBQUM7Z0JBQ2hEO1lBQ0Y7WUFDQUssUUFBUVUsYUFBYSxDQUFDTCxhQUFhTSxJQUFJLEVBQUVMO1FBQzNDO1FBRUEsT0FBT047SUFDVDtJQUVBLE9BQU87QUFDVCJ9