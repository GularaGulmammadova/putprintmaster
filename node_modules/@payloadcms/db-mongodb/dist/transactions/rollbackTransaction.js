"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "rollbackTransaction", {
    enumerable: true,
    get: function() {
        return rollbackTransaction;
    }
});
const rollbackTransaction = async function rollbackTransaction(incomingID = '') {
    let transactionID;
    if (incomingID instanceof Promise) {
        transactionID = await incomingID;
    } else {
        transactionID = incomingID;
    }
    // if multiple operations are using the same transaction, the first will flow through and delete the session.
    // subsequent calls should be ignored.
    if (!this.sessions[transactionID]) {
        return;
    }
    // when session exists but is not inTransaction something unexpected is happening to the session
    if (!this.sessions[transactionID].inTransaction()) {
        this.payload.logger.warn('rollbackTransaction called when no transaction exists');
        delete this.sessions[transactionID];
        return;
    }
    // the first call for rollback should be aborted and deleted causing any other operations with the same transaction to fail
    try {
        await this.sessions[transactionID].abortTransaction();
        await this.sessions[transactionID].endSession();
    } catch (error) {
    // ignore the error as it is likely a race condition from multiple errors
    }
    delete this.sessions[transactionID];
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90cmFuc2FjdGlvbnMvcm9sbGJhY2tUcmFuc2FjdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFJvbGxiYWNrVHJhbnNhY3Rpb24gfSBmcm9tICdwYXlsb2FkL2RhdGFiYXNlJ1xuXG5leHBvcnQgY29uc3Qgcm9sbGJhY2tUcmFuc2FjdGlvbjogUm9sbGJhY2tUcmFuc2FjdGlvbiA9IGFzeW5jIGZ1bmN0aW9uIHJvbGxiYWNrVHJhbnNhY3Rpb24oXG4gIGluY29taW5nSUQgPSAnJyxcbikge1xuICBsZXQgdHJhbnNhY3Rpb25JRDogbnVtYmVyIHwgc3RyaW5nXG5cbiAgaWYgKGluY29taW5nSUQgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgdHJhbnNhY3Rpb25JRCA9IGF3YWl0IGluY29taW5nSURcbiAgfSBlbHNlIHtcbiAgICB0cmFuc2FjdGlvbklEID0gaW5jb21pbmdJRFxuICB9XG5cbiAgLy8gaWYgbXVsdGlwbGUgb3BlcmF0aW9ucyBhcmUgdXNpbmcgdGhlIHNhbWUgdHJhbnNhY3Rpb24sIHRoZSBmaXJzdCB3aWxsIGZsb3cgdGhyb3VnaCBhbmQgZGVsZXRlIHRoZSBzZXNzaW9uLlxuICAvLyBzdWJzZXF1ZW50IGNhbGxzIHNob3VsZCBiZSBpZ25vcmVkLlxuICBpZiAoIXRoaXMuc2Vzc2lvbnNbdHJhbnNhY3Rpb25JRF0pIHtcbiAgICByZXR1cm5cbiAgfVxuXG4gIC8vIHdoZW4gc2Vzc2lvbiBleGlzdHMgYnV0IGlzIG5vdCBpblRyYW5zYWN0aW9uIHNvbWV0aGluZyB1bmV4cGVjdGVkIGlzIGhhcHBlbmluZyB0byB0aGUgc2Vzc2lvblxuICBpZiAoIXRoaXMuc2Vzc2lvbnNbdHJhbnNhY3Rpb25JRF0uaW5UcmFuc2FjdGlvbigpKSB7XG4gICAgdGhpcy5wYXlsb2FkLmxvZ2dlci53YXJuKCdyb2xsYmFja1RyYW5zYWN0aW9uIGNhbGxlZCB3aGVuIG5vIHRyYW5zYWN0aW9uIGV4aXN0cycpXG4gICAgZGVsZXRlIHRoaXMuc2Vzc2lvbnNbdHJhbnNhY3Rpb25JRF1cbiAgICByZXR1cm5cbiAgfVxuXG4gIC8vIHRoZSBmaXJzdCBjYWxsIGZvciByb2xsYmFjayBzaG91bGQgYmUgYWJvcnRlZCBhbmQgZGVsZXRlZCBjYXVzaW5nIGFueSBvdGhlciBvcGVyYXRpb25zIHdpdGggdGhlIHNhbWUgdHJhbnNhY3Rpb24gdG8gZmFpbFxuICB0cnkge1xuICAgIGF3YWl0IHRoaXMuc2Vzc2lvbnNbdHJhbnNhY3Rpb25JRF0uYWJvcnRUcmFuc2FjdGlvbigpXG4gICAgYXdhaXQgdGhpcy5zZXNzaW9uc1t0cmFuc2FjdGlvbklEXS5lbmRTZXNzaW9uKClcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAvLyBpZ25vcmUgdGhlIGVycm9yIGFzIGl0IGlzIGxpa2VseSBhIHJhY2UgY29uZGl0aW9uIGZyb20gbXVsdGlwbGUgZXJyb3JzXG4gIH1cbiAgZGVsZXRlIHRoaXMuc2Vzc2lvbnNbdHJhbnNhY3Rpb25JRF1cbn1cbiJdLCJuYW1lcyI6WyJyb2xsYmFja1RyYW5zYWN0aW9uIiwiaW5jb21pbmdJRCIsInRyYW5zYWN0aW9uSUQiLCJQcm9taXNlIiwic2Vzc2lvbnMiLCJpblRyYW5zYWN0aW9uIiwicGF5bG9hZCIsImxvZ2dlciIsIndhcm4iLCJhYm9ydFRyYW5zYWN0aW9uIiwiZW5kU2Vzc2lvbiIsImVycm9yIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFFYUE7OztlQUFBQTs7O0FBQU4sTUFBTUEsc0JBQTJDLGVBQWVBLG9CQUNyRUMsYUFBYSxFQUFFO0lBRWYsSUFBSUM7SUFFSixJQUFJRCxzQkFBc0JFLFNBQVM7UUFDakNELGdCQUFnQixNQUFNRDtJQUN4QixPQUFPO1FBQ0xDLGdCQUFnQkQ7SUFDbEI7SUFFQSw2R0FBNkc7SUFDN0csc0NBQXNDO0lBQ3RDLElBQUksQ0FBQyxJQUFJLENBQUNHLFFBQVEsQ0FBQ0YsY0FBYyxFQUFFO1FBQ2pDO0lBQ0Y7SUFFQSxnR0FBZ0c7SUFDaEcsSUFBSSxDQUFDLElBQUksQ0FBQ0UsUUFBUSxDQUFDRixjQUFjLENBQUNHLGFBQWEsSUFBSTtRQUNqRCxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDQyxJQUFJLENBQUM7UUFDekIsT0FBTyxJQUFJLENBQUNKLFFBQVEsQ0FBQ0YsY0FBYztRQUNuQztJQUNGO0lBRUEsMkhBQTJIO0lBQzNILElBQUk7UUFDRixNQUFNLElBQUksQ0FBQ0UsUUFBUSxDQUFDRixjQUFjLENBQUNPLGdCQUFnQjtRQUNuRCxNQUFNLElBQUksQ0FBQ0wsUUFBUSxDQUFDRixjQUFjLENBQUNRLFVBQVU7SUFDL0MsRUFBRSxPQUFPQyxPQUFPO0lBQ2QseUVBQXlFO0lBQzNFO0lBQ0EsT0FBTyxJQUFJLENBQUNQLFFBQVEsQ0FBQ0YsY0FBYztBQUNyQyJ9