"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "payloadCloud", {
    enumerable: true,
    get: function() {
        return payloadCloud;
    }
});
const _email = require("./email");
const _afterDelete = require("./hooks/afterDelete");
const _beforeChange = require("./hooks/beforeChange");
const _uploadCache = require("./hooks/uploadCache");
const _staticHandler = require("./staticHandler");
const _webpack = require("./webpack");
const payloadCloud = (pluginOptions)=>(incomingConfig)=>{
        let config = {
            ...incomingConfig
        };
        const webpack = (0, _webpack.extendWebpackConfig)(incomingConfig);
        config.admin = {
            ...config.admin || {},
            webpack
        };
        if (process.env.PAYLOAD_CLOUD !== 'true') {
            return config // only modified webpack
            ;
        }
        const cachingEnabled = pluginOptions?.uploadCaching !== false && !!process.env.PAYLOAD_CLOUD_CACHE_KEY;
        const apiEndpoint = pluginOptions?.endpoint || 'https://cloud-api.payloadcms.com';
        // Configure cloud storage
        if (pluginOptions?.storage !== false) {
            config = {
                ...config,
                collections: (config.collections || []).map((collection)=>{
                    if (collection.upload) {
                        return {
                            ...collection,
                            hooks: {
                                ...collection.hooks || {},
                                afterChange: [
                                    ...collection.hooks?.afterChange || [],
                                    ...cachingEnabled ? [
                                        (0, _uploadCache.getCacheUploadsAfterChangeHook)({
                                            endpoint: apiEndpoint
                                        })
                                    ] : []
                                ],
                                afterDelete: [
                                    ...collection.hooks?.afterDelete || [],
                                    (0, _afterDelete.getAfterDeleteHook)({
                                        collection
                                    }),
                                    ...cachingEnabled ? [
                                        (0, _uploadCache.getCacheUploadsAfterDeleteHook)({
                                            endpoint: apiEndpoint
                                        })
                                    ] : []
                                ],
                                beforeChange: [
                                    ...collection.hooks?.beforeChange || [],
                                    (0, _beforeChange.getBeforeChangeHook)({
                                        collection
                                    })
                                ]
                            },
                            upload: {
                                ...typeof collection.upload === 'object' ? collection.upload : {},
                                disableLocalStorage: true,
                                handlers: [
                                    ...typeof collection.upload === 'object' && Array.isArray(collection.upload.handlers) ? collection.upload.handlers : [],
                                    (0, _staticHandler.getStaticHandler)({
                                        cachingOptions: pluginOptions?.uploadCaching,
                                        collection
                                    })
                                ]
                            }
                        };
                    }
                    return collection;
                }),
                upload: {
                    ...config.upload || {},
                    useTempFiles: true
                }
            };
        }
        // Configure cloud email
        const apiKey = process.env.PAYLOAD_CLOUD_EMAIL_API_KEY;
        const defaultDomain = process.env.PAYLOAD_CLOUD_DEFAULT_DOMAIN;
        if (pluginOptions?.email !== false && apiKey && defaultDomain) {
            config.email = (0, _email.payloadCloudEmail)({
                apiKey,
                config,
                defaultDomain
            });
        }
        return config;
    };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wbHVnaW4udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBDb25maWcgfSBmcm9tICdwYXlsb2FkL2NvbmZpZydcblxuaW1wb3J0IHR5cGUgeyBQbHVnaW5PcHRpb25zIH0gZnJvbSAnLi90eXBlcydcblxuaW1wb3J0IHsgcGF5bG9hZENsb3VkRW1haWwgfSBmcm9tICcuL2VtYWlsJ1xuaW1wb3J0IHsgZ2V0QWZ0ZXJEZWxldGVIb29rIH0gZnJvbSAnLi9ob29rcy9hZnRlckRlbGV0ZSdcbmltcG9ydCB7IGdldEJlZm9yZUNoYW5nZUhvb2sgfSBmcm9tICcuL2hvb2tzL2JlZm9yZUNoYW5nZSdcbmltcG9ydCB7IGdldENhY2hlVXBsb2Fkc0FmdGVyQ2hhbmdlSG9vaywgZ2V0Q2FjaGVVcGxvYWRzQWZ0ZXJEZWxldGVIb29rIH0gZnJvbSAnLi9ob29rcy91cGxvYWRDYWNoZSdcbmltcG9ydCB7IGdldFN0YXRpY0hhbmRsZXIgfSBmcm9tICcuL3N0YXRpY0hhbmRsZXInXG5pbXBvcnQgeyBleHRlbmRXZWJwYWNrQ29uZmlnIH0gZnJvbSAnLi93ZWJwYWNrJ1xuXG5leHBvcnQgY29uc3QgcGF5bG9hZENsb3VkID1cbiAgKHBsdWdpbk9wdGlvbnM/OiBQbHVnaW5PcHRpb25zKSA9PlxuICAoaW5jb21pbmdDb25maWc6IENvbmZpZyk6IENvbmZpZyA9PiB7XG4gICAgbGV0IGNvbmZpZyA9IHsgLi4uaW5jb21pbmdDb25maWcgfVxuICAgIGNvbnN0IHdlYnBhY2sgPSBleHRlbmRXZWJwYWNrQ29uZmlnKGluY29taW5nQ29uZmlnKVxuXG4gICAgY29uZmlnLmFkbWluID0ge1xuICAgICAgLi4uKGNvbmZpZy5hZG1pbiB8fCB7fSksXG4gICAgICB3ZWJwYWNrLFxuICAgIH1cblxuICAgIGlmIChwcm9jZXNzLmVudi5QQVlMT0FEX0NMT1VEICE9PSAndHJ1ZScpIHtcbiAgICAgIHJldHVybiBjb25maWcgLy8gb25seSBtb2RpZmllZCB3ZWJwYWNrXG4gICAgfVxuXG4gICAgY29uc3QgY2FjaGluZ0VuYWJsZWQgPVxuICAgICAgcGx1Z2luT3B0aW9ucz8udXBsb2FkQ2FjaGluZyAhPT0gZmFsc2UgJiYgISFwcm9jZXNzLmVudi5QQVlMT0FEX0NMT1VEX0NBQ0hFX0tFWVxuXG4gICAgY29uc3QgYXBpRW5kcG9pbnQgPSBwbHVnaW5PcHRpb25zPy5lbmRwb2ludCB8fCAnaHR0cHM6Ly9jbG91ZC1hcGkucGF5bG9hZGNtcy5jb20nXG5cbiAgICAvLyBDb25maWd1cmUgY2xvdWQgc3RvcmFnZVxuICAgIGlmIChwbHVnaW5PcHRpb25zPy5zdG9yYWdlICE9PSBmYWxzZSkge1xuICAgICAgY29uZmlnID0ge1xuICAgICAgICAuLi5jb25maWcsXG4gICAgICAgIGNvbGxlY3Rpb25zOiAoY29uZmlnLmNvbGxlY3Rpb25zIHx8IFtdKS5tYXAoKGNvbGxlY3Rpb24pID0+IHtcbiAgICAgICAgICBpZiAoY29sbGVjdGlvbi51cGxvYWQpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIC4uLmNvbGxlY3Rpb24sXG4gICAgICAgICAgICAgIGhvb2tzOiB7XG4gICAgICAgICAgICAgICAgLi4uKGNvbGxlY3Rpb24uaG9va3MgfHwge30pLFxuICAgICAgICAgICAgICAgIGFmdGVyQ2hhbmdlOiBbXG4gICAgICAgICAgICAgICAgICAuLi4oY29sbGVjdGlvbi5ob29rcz8uYWZ0ZXJDaGFuZ2UgfHwgW10pLFxuICAgICAgICAgICAgICAgICAgLi4uKGNhY2hpbmdFbmFibGVkXG4gICAgICAgICAgICAgICAgICAgID8gW2dldENhY2hlVXBsb2Fkc0FmdGVyQ2hhbmdlSG9vayh7IGVuZHBvaW50OiBhcGlFbmRwb2ludCB9KV1cbiAgICAgICAgICAgICAgICAgICAgOiBbXSksXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBhZnRlckRlbGV0ZTogW1xuICAgICAgICAgICAgICAgICAgLi4uKGNvbGxlY3Rpb24uaG9va3M/LmFmdGVyRGVsZXRlIHx8IFtdKSxcbiAgICAgICAgICAgICAgICAgIGdldEFmdGVyRGVsZXRlSG9vayh7IGNvbGxlY3Rpb24gfSksXG4gICAgICAgICAgICAgICAgICAuLi4oY2FjaGluZ0VuYWJsZWRcbiAgICAgICAgICAgICAgICAgICAgPyBbZ2V0Q2FjaGVVcGxvYWRzQWZ0ZXJEZWxldGVIb29rKHsgZW5kcG9pbnQ6IGFwaUVuZHBvaW50IH0pXVxuICAgICAgICAgICAgICAgICAgICA6IFtdKSxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIGJlZm9yZUNoYW5nZTogW1xuICAgICAgICAgICAgICAgICAgLi4uKGNvbGxlY3Rpb24uaG9va3M/LmJlZm9yZUNoYW5nZSB8fCBbXSksXG4gICAgICAgICAgICAgICAgICBnZXRCZWZvcmVDaGFuZ2VIb29rKHsgY29sbGVjdGlvbiB9KSxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB1cGxvYWQ6IHtcbiAgICAgICAgICAgICAgICAuLi4odHlwZW9mIGNvbGxlY3Rpb24udXBsb2FkID09PSAnb2JqZWN0JyA/IGNvbGxlY3Rpb24udXBsb2FkIDoge30pLFxuICAgICAgICAgICAgICAgIGRpc2FibGVMb2NhbFN0b3JhZ2U6IHRydWUsXG4gICAgICAgICAgICAgICAgaGFuZGxlcnM6IFtcbiAgICAgICAgICAgICAgICAgIC4uLih0eXBlb2YgY29sbGVjdGlvbi51cGxvYWQgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICAgICAgICBBcnJheS5pc0FycmF5KGNvbGxlY3Rpb24udXBsb2FkLmhhbmRsZXJzKVxuICAgICAgICAgICAgICAgICAgICA/IGNvbGxlY3Rpb24udXBsb2FkLmhhbmRsZXJzXG4gICAgICAgICAgICAgICAgICAgIDogW10pLFxuICAgICAgICAgICAgICAgICAgZ2V0U3RhdGljSGFuZGxlcih7XG4gICAgICAgICAgICAgICAgICAgIGNhY2hpbmdPcHRpb25zOiBwbHVnaW5PcHRpb25zPy51cGxvYWRDYWNoaW5nLFxuICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uLFxuICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gY29sbGVjdGlvblxuICAgICAgICB9KSxcbiAgICAgICAgdXBsb2FkOiB7XG4gICAgICAgICAgLi4uKGNvbmZpZy51cGxvYWQgfHwge30pLFxuICAgICAgICAgIHVzZVRlbXBGaWxlczogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBDb25maWd1cmUgY2xvdWQgZW1haWxcbiAgICBjb25zdCBhcGlLZXkgPSBwcm9jZXNzLmVudi5QQVlMT0FEX0NMT1VEX0VNQUlMX0FQSV9LRVlcbiAgICBjb25zdCBkZWZhdWx0RG9tYWluID0gcHJvY2Vzcy5lbnYuUEFZTE9BRF9DTE9VRF9ERUZBVUxUX0RPTUFJTlxuICAgIGlmIChwbHVnaW5PcHRpb25zPy5lbWFpbCAhPT0gZmFsc2UgJiYgYXBpS2V5ICYmIGRlZmF1bHREb21haW4pIHtcbiAgICAgIGNvbmZpZy5lbWFpbCA9IHBheWxvYWRDbG91ZEVtYWlsKHtcbiAgICAgICAgYXBpS2V5LFxuICAgICAgICBjb25maWcsXG4gICAgICAgIGRlZmF1bHREb21haW4sXG4gICAgICB9KVxuICAgIH1cblxuICAgIHJldHVybiBjb25maWdcbiAgfVxuIl0sIm5hbWVzIjpbInBheWxvYWRDbG91ZCIsInBsdWdpbk9wdGlvbnMiLCJpbmNvbWluZ0NvbmZpZyIsImNvbmZpZyIsIndlYnBhY2siLCJleHRlbmRXZWJwYWNrQ29uZmlnIiwiYWRtaW4iLCJwcm9jZXNzIiwiZW52IiwiUEFZTE9BRF9DTE9VRCIsImNhY2hpbmdFbmFibGVkIiwidXBsb2FkQ2FjaGluZyIsIlBBWUxPQURfQ0xPVURfQ0FDSEVfS0VZIiwiYXBpRW5kcG9pbnQiLCJlbmRwb2ludCIsInN0b3JhZ2UiLCJjb2xsZWN0aW9ucyIsIm1hcCIsImNvbGxlY3Rpb24iLCJ1cGxvYWQiLCJob29rcyIsImFmdGVyQ2hhbmdlIiwiZ2V0Q2FjaGVVcGxvYWRzQWZ0ZXJDaGFuZ2VIb29rIiwiYWZ0ZXJEZWxldGUiLCJnZXRBZnRlckRlbGV0ZUhvb2siLCJnZXRDYWNoZVVwbG9hZHNBZnRlckRlbGV0ZUhvb2siLCJiZWZvcmVDaGFuZ2UiLCJnZXRCZWZvcmVDaGFuZ2VIb29rIiwiZGlzYWJsZUxvY2FsU3RvcmFnZSIsImhhbmRsZXJzIiwiQXJyYXkiLCJpc0FycmF5IiwiZ2V0U3RhdGljSGFuZGxlciIsImNhY2hpbmdPcHRpb25zIiwidXNlVGVtcEZpbGVzIiwiYXBpS2V5IiwiUEFZTE9BRF9DTE9VRF9FTUFJTF9BUElfS0VZIiwiZGVmYXVsdERvbWFpbiIsIlBBWUxPQURfQ0xPVURfREVGQVVMVF9ET01BSU4iLCJlbWFpbCIsInBheWxvYWRDbG91ZEVtYWlsIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFXYUE7OztlQUFBQTs7O3VCQVBxQjs2QkFDQzs4QkFDQzs2QkFDMkM7K0JBQzlDO3lCQUNHO0FBRTdCLE1BQU1BLGVBQ1gsQ0FBQ0MsZ0JBQ0QsQ0FBQ0M7UUFDQyxJQUFJQyxTQUFTO1lBQUUsR0FBR0QsY0FBYztRQUFDO1FBQ2pDLE1BQU1FLFVBQVVDLElBQUFBLDRCQUFtQixFQUFDSDtRQUVwQ0MsT0FBT0csS0FBSyxHQUFHO1lBQ2IsR0FBSUgsT0FBT0csS0FBSyxJQUFJLENBQUMsQ0FBQztZQUN0QkY7UUFDRjtRQUVBLElBQUlHLFFBQVFDLEdBQUcsQ0FBQ0MsYUFBYSxLQUFLLFFBQVE7WUFDeEMsT0FBT04sT0FBTyx3QkFBd0I7O1FBQ3hDO1FBRUEsTUFBTU8saUJBQ0pULGVBQWVVLGtCQUFrQixTQUFTLENBQUMsQ0FBQ0osUUFBUUMsR0FBRyxDQUFDSSx1QkFBdUI7UUFFakYsTUFBTUMsY0FBY1osZUFBZWEsWUFBWTtRQUUvQywwQkFBMEI7UUFDMUIsSUFBSWIsZUFBZWMsWUFBWSxPQUFPO1lBQ3BDWixTQUFTO2dCQUNQLEdBQUdBLE1BQU07Z0JBQ1RhLGFBQWEsQUFBQ2IsQ0FBQUEsT0FBT2EsV0FBVyxJQUFJLEVBQUUsQUFBRCxFQUFHQyxHQUFHLENBQUMsQ0FBQ0M7b0JBQzNDLElBQUlBLFdBQVdDLE1BQU0sRUFBRTt3QkFDckIsT0FBTzs0QkFDTCxHQUFHRCxVQUFVOzRCQUNiRSxPQUFPO2dDQUNMLEdBQUlGLFdBQVdFLEtBQUssSUFBSSxDQUFDLENBQUM7Z0NBQzFCQyxhQUFhO3VDQUNQSCxXQUFXRSxLQUFLLEVBQUVDLGVBQWUsRUFBRTt1Q0FDbkNYLGlCQUNBO3dDQUFDWSxJQUFBQSwyQ0FBOEIsRUFBQzs0Q0FBRVIsVUFBVUQ7d0NBQVk7cUNBQUcsR0FDM0QsRUFBRTtpQ0FDUDtnQ0FDRFUsYUFBYTt1Q0FDUEwsV0FBV0UsS0FBSyxFQUFFRyxlQUFlLEVBQUU7b0NBQ3ZDQyxJQUFBQSwrQkFBa0IsRUFBQzt3Q0FBRU47b0NBQVc7dUNBQzVCUixpQkFDQTt3Q0FBQ2UsSUFBQUEsMkNBQThCLEVBQUM7NENBQUVYLFVBQVVEO3dDQUFZO3FDQUFHLEdBQzNELEVBQUU7aUNBQ1A7Z0NBQ0RhLGNBQWM7dUNBQ1JSLFdBQVdFLEtBQUssRUFBRU0sZ0JBQWdCLEVBQUU7b0NBQ3hDQyxJQUFBQSxpQ0FBbUIsRUFBQzt3Q0FBRVQ7b0NBQVc7aUNBQ2xDOzRCQUNIOzRCQUNBQyxRQUFRO2dDQUNOLEdBQUksT0FBT0QsV0FBV0MsTUFBTSxLQUFLLFdBQVdELFdBQVdDLE1BQU0sR0FBRyxDQUFDLENBQUM7Z0NBQ2xFUyxxQkFBcUI7Z0NBQ3JCQyxVQUFVO3VDQUNKLE9BQU9YLFdBQVdDLE1BQU0sS0FBSyxZQUNqQ1csTUFBTUMsT0FBTyxDQUFDYixXQUFXQyxNQUFNLENBQUNVLFFBQVEsSUFDcENYLFdBQVdDLE1BQU0sQ0FBQ1UsUUFBUSxHQUMxQixFQUFFO29DQUNORyxJQUFBQSwrQkFBZ0IsRUFBQzt3Q0FDZkMsZ0JBQWdCaEMsZUFBZVU7d0NBQy9CTztvQ0FDRjtpQ0FDRDs0QkFDSDt3QkFDRjtvQkFDRjtvQkFFQSxPQUFPQTtnQkFDVDtnQkFDQUMsUUFBUTtvQkFDTixHQUFJaEIsT0FBT2dCLE1BQU0sSUFBSSxDQUFDLENBQUM7b0JBQ3ZCZSxjQUFjO2dCQUNoQjtZQUNGO1FBQ0Y7UUFFQSx3QkFBd0I7UUFDeEIsTUFBTUMsU0FBUzVCLFFBQVFDLEdBQUcsQ0FBQzRCLDJCQUEyQjtRQUN0RCxNQUFNQyxnQkFBZ0I5QixRQUFRQyxHQUFHLENBQUM4Qiw0QkFBNEI7UUFDOUQsSUFBSXJDLGVBQWVzQyxVQUFVLFNBQVNKLFVBQVVFLGVBQWU7WUFDN0RsQyxPQUFPb0MsS0FBSyxHQUFHQyxJQUFBQSx3QkFBaUIsRUFBQztnQkFDL0JMO2dCQUNBaEM7Z0JBQ0FrQztZQUNGO1FBQ0Y7UUFFQSxPQUFPbEM7SUFDVCJ9